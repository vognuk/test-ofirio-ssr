{"version":3,"file":"component---src-pages-bratislava-js-cdaa224366ae32e4e881.js","mappings":"qKAgBA,EAbe,WACb,OACE,8BACE,gBAAC,EAAAA,KAAD,CAAMC,GAAG,KAAT,QACA,2BACE,gBAAC,EAAAD,KAAD,CAAMC,GAAG,WAAT,SACA,gBAAC,EAAAD,KAAD,CAAMC,GAAG,gBAAT,cACA,gBAAC,EAAAD,KAAD,CAAMC,GAAG,YAAT,aCCR,EATe,WAEX,OACI,gCACI,wCCWZ,EAbe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEd,OACI,gCACI,gBAAC,EAAD,MACI,4BACKA,GAET,gBAAC,EAAD,S,mCCFZ,IARoB,SAAC,GAAkC,EAAjCC,KAAkC,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,KAAiB,EAAXC,MACxC,OACI,+BACI,4CAAoBF,EAApB,QAAmCC,EAAnC,Y,mEC2CV,EAhDyB,CACvBE,MAAO,CACLC,IAAK,QACLC,IAAK,SAEPC,QAAS,CACP,CACEC,GAAI,IACJC,KAAM,SACNC,YAAa,aACbC,KAAM,GACNC,QAAS,KAGbC,KAAM,WACNJ,KAAM,CACJK,KAAM,EACNC,WAAY,MACZC,SAAU,MACVC,SAAU,MACVC,SAAU,KACVC,SAAU,GACVC,UAAW,KACXC,WAAY,MAEdC,WAAY,IACZC,KAAM,CACJC,MAAO,KACPC,IAAK,IACLC,KAAM,MAERC,OAAQ,CACNC,IAAK,IAEPC,GAAI,WACJC,IAAK,CACHC,KAAM,EACNvB,GAAI,QACJwB,QAAS,KACTC,QAAS,WACTC,OAAQ,YAEVC,SAAU,MACV3B,GAAI,OACJ4B,KAAM,OACNC,IAAK,K,UCzCT,GAAgBC,KAJH,CACTC,kBAAkB,mGC8DtB,EA1D2B,SAACC,EAAkBvC,EAAUC,GACpD,OAAO,SAACC,GACJsC,QAAQC,IAAIC,OAAOC,OAAQC,GAAY,IACvC,OAAwBC,EAAAA,EAAAA,UAASC,GAA1B/C,EAAP,UA0CA,OACI,gBAACgD,EAAA,EAAD,KACI,gBAACR,EAAD,eACIxC,KAAQA,EACRC,SAAYA,EACZC,KAAQA,GACJC,Q,8DCxCxB,UAZmB,WACf,IAAM8C,GAAoBC,EAAAA,EAAAA,GACtBC,EAAAA,EACA,aACA,GAGJ,OACI,gBAACF,EAAD","sources":["webpack://ofiriotest/./src/components/Header/Header.js","webpack://ofiriotest/./src/components/Footer/Footer.js","webpack://ofiriotest/./src/components/Layout.js","webpack://ofiriotest/./src/components/WeatherView/WeatherView.js","webpack://ofiriotest/./src/state/state.js","webpack://ofiriotest/./src/helpers/variables.js","webpack://ofiriotest/./src/components/withGetCityWeather.js","webpack://ofiriotest/./src/pages/bratislava.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Link to=\"/\">Home</Link>\r\n      <nav>\r\n        <Link to=\"/minsk/\">Minsk</Link>\r\n        <Link to=\"/bratislava/\">Bratislava</Link>\r\n        <Link to=\"/moskva/\">Moskva</Link>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <>\r\n            <h1> Footer </h1>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Header from \"./Header/Header\";\r\nimport Footer from \"./Footer/Footer\";\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n                <main>\r\n                    {children}\r\n                </main>\r\n            <Footer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nconst WeatherView = ({data, cityName, days, props}) => {\r\n    return (\r\n        <section>\r\n            <h2>WeatherView of {cityName} for {days} days</h2>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default WeatherView;\r\n","const initialWeatherData = {\r\n    coord: {\r\n      lon: 30.9494,\r\n      lat: 49.9188,\r\n    },\r\n    weather: [\r\n      {\r\n        id: 801,\r\n        main: \"Clouds\",\r\n        description: \"few clouds\",\r\n        icon: \"\",\r\n        iconURL: \"\",\r\n      },\r\n    ],\r\n    base: \"stations\",\r\n    main: {\r\n      temp: 0,\r\n      feels_like: 10.28,\r\n      temp_min: 10.68,\r\n      temp_max: 11.78,\r\n      pressure: 1020,\r\n      humidity: 56,\r\n      sea_level: 1020,\r\n      grnd_level: 1001,\r\n    },\r\n    visibility: 10000,\r\n    wind: {\r\n      speed: 3.16,\r\n      deg: 320,\r\n      gust: 3.73,\r\n    },\r\n    clouds: {\r\n      all: 15,\r\n    },\r\n    dt: 1634461275,\r\n    sys: {\r\n      type: 2,\r\n      id: 2034980,\r\n      country: \"UA\",\r\n      sunrise: 1634444454,\r\n      sunset: 1634482911,\r\n    },\r\n    timezone: 10800,\r\n    id: 694992,\r\n    name: \"City\",\r\n    cod: 200,\r\n  };\r\n  \r\n  export default initialWeatherData;\r\n  ","const urls = {\r\n    CITY_WEATHER_DAYS: `https://api.openweathermap.org/data/2.5/forecast/daily?q={city name}&cnt={cnt}&appid={API key}`,\r\n}\r\n\r\nexport default {urls};\r\n","import React, {useState, useEffect} from 'react';\r\nimport initialWeatherData from '../state/state'\r\nimport Layout from '../components/Layout';\r\nimport requestURL from '../helpers/variables';\r\n\r\nconst withGetCityWeather = (WrappedComponent, cityName, days) => {\r\n    return (props) => {\r\n        console.log(Object.values (requestURL)[0]);\r\n        const [data, setData] = useState(initialWeatherData);\r\n        // useEffect(async () => {\r\n        //     try {\r\n        //         // const query = graphql`\r\n        //         // query FiveDaysResult {\r\n        //         //     list {\r\n        //         //     edges {\r\n        //         //         node {\r\n        //         //         gender\r\n        //         //         name {\r\n        //         //             title\r\n        //         //             first\r\n        //         //             last\r\n        //         //         }\r\n        //         //         picture {\r\n        //         //             large\r\n        //         //             medium\r\n        //         //             thumbnail\r\n        //         //         }\r\n        //         //         }\r\n        //         //     }\r\n        //         //     }\r\n        //         // }\r\n        //         // `;\r\n\r\n        //     } catch(error){\r\n\r\n        //     }\r\n        // })\r\n\r\n        // {\r\n        //     allRestApiPosts {\r\n        //       edges {\r\n        //         node {\r\n        //           userId\r\n        //           title\r\n        //           body\r\n        //         }\r\n        //       }\r\n        //     }\r\n        //   }\r\n        \r\n        return (\r\n            <Layout>\r\n                <WrappedComponent \r\n                    data = {data}\r\n                    cityName = {cityName}\r\n                    days = {days}\r\n                    {...props}\r\n                />\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withGetCityWeather;\r\n","import React from 'react';\r\nimport withGetCityWeather from '../components/withGetCityWeather';\r\nimport WeatherView from '../components/WeatherView/WeatherView';\r\n\r\nconst Bratislava = () => {\r\n    const BratislavaWeather = withGetCityWeather(\r\n        WeatherView,\r\n        \"Bratislava\",\r\n        5\r\n    );\r\n\r\n    return (\r\n        <BratislavaWeather />\r\n    );\r\n}\r\n\r\nexport default Bratislava;\r\n"],"names":["Link","to","children","data","cityName","days","props","coord","lon","lat","weather","id","main","description","icon","iconURL","base","temp","feels_like","temp_min","temp_max","pressure","humidity","sea_level","grnd_level","visibility","wind","speed","deg","gust","clouds","all","dt","sys","type","country","sunrise","sunset","timezone","name","cod","urls","CITY_WEATHER_DAYS","WrappedComponent","console","log","Object","values","requestURL","useState","initialWeatherData","Layout","BratislavaWeather","withGetCityWeather","WeatherView"],"sourceRoot":""}